<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhu.mapper.StudentCourseMapper">
    <!--查询全校课表-->
    <select id="query" resultType="TCourse" parameterType="map">
        select c.courseId,t.teacherId,c.courseName,c.courseTime,c.credit,c.lessonType,
        t.teacherName,tc.lessonTime,tc.place,tc.isOpen from teacher t join teacher_course tc
        on t.teacherId=tc.teacherId JOIN course c on c.courseId=tc.courseId
        <where>
            tc.isOpen=1

            <if test="map.courseId != null || map.courseId=''">
               and c.courseId like concat('%',#{map.courseId},'%')
            </if>
            <if test="map.courseName != null || map.courseName=''">
               and c.courseName like concat('%',#{map.courseName},'%')
            </if>
            <if test="map.teacherName != null || map.teacherName=''">
               and t.teacherName like concat('%',#{map.teacherName},'%')
            </if>
        </where>
        order by c.courseId
    </select>

    <!--通过studentid和courseId查询记录-->
    <select id="queryBySidAndCid" resultType="studentCourse">
        select studentID,courseId,teacherId,score from student_course WHERE studentId=#{studentId} AND
         courseId=#{courseId} and teacherId=#{teacherId}
    </select>

    <select id="queryByTeacherName" resultType="teacher">
        select * from teacher where teacherName=#{teacherName}
    </select>

    <!--查询已选的全部课程-->
    <select id="queryIsSelect" resultType="tCourse" parameterType="map">
        select sc.studentId,sc.courseId,t.teacherId,c.courseName,c.courseTime,c.credit,
        c.lessonType,t.teacherName,tc.lessonTime,tc.place from teacher t join teacher_course
         tc on t.teacherId=tc.teacherId JOIN course c on c.courseId=tc.courseId JOIN
          student_course sc on c.courseId=sc.courseId and sc.teacherId=t.teacherId where
           sc.studentId=#{map.studentId} order by tc.lessonTime <!--limit #{map.page},#{map.size}-->
    </select>
    <select id="queryIsSelectConunt" resultType="int" parameterType="map">
        select count(*) from teacher t join teacher_course
         tc on t.teacherId=tc.teacherId JOIN course c on c.courseId=tc.courseId JOIN
          student_course sc on c.courseId=sc.courseId and sc.teacherId=t.teacherId where
           sc.studentId=#{map.studentId}
    </select>


    <!--查询自己未选的全部课程-->
    <select id="queryNoSelect" resultType="tCourse" parameterType="map">
       select c.courseId,t.teacherId,c.courseName,c.courseTime,c.credit,c.lessonType,
        t.teacherName,tc.lessonTime,tc.place from teacher t join teacher_course tc
         on t.teacherId=tc.teacherId JOIN course c on c.courseId=tc.courseId
            where c.courseId not in (select courseId from student_course WHERE studentId=#{map.studentId} )
                or t.teacherId not in (select teacherId from student_course WHERE studentId=#{map.studentId})
            order by c.courseId <!--limit #{map.page},#{map.size}-->
    </select>
    <select id="queryNoSelectCount" resultType="int" parameterType="map">
        select count(*) from teacher t join teacher_course tc
           on t.teacherId=tc.teacherId JOIN course c on c.courseId=tc.courseId
        where c.courseId not in (select courseId from student_course WHERE studentId=#{studentId} )
        or t.teacherId not in (select teacherId from student_course WHERE studentId=#{studentId})
    </select>

    <!--选课-->
    <!--查询已选课程时间-->
    <select id="queryLessonTime" parameterType="studentCourse" resultType="string">
        select lessonTime from teacher_course tc join teacher t on t.teacherId=tc.teacherId
 join course c on c.courseId=tc.courseId join student_course sc on sc.courseId=c.courseId
  JOIN student  s on s.studentId=sc.studentId and sc.teacherId=t.teacherId where
  sc.studentId=#{studentCourse.studentId}
    </select>
    <insert id="addStudentCourse" parameterType="studentCourse">
        insert into student_course (studentId,courseId,teacherId) values(#{studentId},#{courseId},#{teacherId})
    </insert>

    <!--退课-->
    <delete id="deleteStudentCourse" parameterType="studentCourse">
        delete from student_course where courseId=#{courseId}
         and studentId=#{studentId} and teacherId=#{teacherId}
    </delete>

</mapper>