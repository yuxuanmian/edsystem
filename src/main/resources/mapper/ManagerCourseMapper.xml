<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xhu.mapper.ManagerCourseMapper">
    <!--查询全校课表-->
    <select id="query" resultType="tCourse" parameterType="map">
        select c.courseId,t.teacherId,c.courseName,c.courseTime,c.credit,c.lessonType,
        t.teacherName,tc.lessonTime,tc.place from teacher t join teacher_course tc
        on t.teacherId=tc.teacherId JOIN course c on c.courseId=tc.courseId
        <where>
            <if test="map.courseId != null">
                 c.courseId like "%"#{map.courseId}"%"
            </if>
            <if test="map.courseName != null">
                and c.courseName like "%"#{map.courseName}"%"
            </if>
            <if test="map.teacherName != null">
                and t.teacherName like "%"#{map.teacherName}"%"
            </if>
        </where>
        order by c.courseId
    </select>
    <select id="queryConunt" parameterType="map" resultType="int">
        select count(*) from teacher t join teacher_course tc
        on t.teacherId=tc.teacherId JOIN course c on c.courseId=tc.courseId
        <where>
            <if test="courseId != null">
                 c.courseId like concat("%,"#{courseId}",%")
            </if>
            <if test="courseName != null">
                and c.courseName like concat("%,"#{courseName}",%")
            </if>
            <if test="teacherName != null">
                and t.teacherName like concat("%,"#{teacherName}",%")
            </if>
        </where>
    </select>
    <select id="queryCheckCount" resultType="int">
        select count(*) checkCount from student_course stc join teacher_course tc on
         stc.teacherId=tc.teacherId and stc.courseId=tc.courseId
          where stc.courseId=#{courseId} and stc.teacherId=#{teacherId}
    </select>
    <!--判断学生存在-->
    <select id="queryStudentBySid" resultType="student">
        select * from student where studentId=#{studentId}
    </select>
    <!--查询当前学生是否选择该课程-->
    <select id="queryBySidCidTid" parameterType="studentCourse" resultType="studentCourse">
        SELECT * from student_course WHERE
         studentId=#{studentId} and courseId =#{courseId} and teacherId=#{teacherId}
    </select>
    <!--查询已选课程时间-->
    <select id="queryLessonTime" parameterType="studentCourse" resultType="string">
        select lessonTime from teacher_course tc join teacher t on t.teacherId=tc.teacherId
 join course c on c.courseId=tc.courseId join student_course sc on sc.courseId=c.courseId
  JOIN student  s on s.studentId=sc.studentId and sc.teacherId=t.teacherId where
  sc.studentId=#{studentId}
    </select>
    <insert id="addStudentCourse" parameterType="studentCourse">
        insert into student_course (studentId,courseId,teacherId)
         values(#{studentId},#{courseId},#{teacherId})
    </insert>

    <!--退课-->
    <delete id="deleteStudentCourse" parameterType="studentCourse">
        delete from student_course where courseId=#{courseId}
         and studentId=#{studentId} and teacherId=#{teacherId}
    </delete>

    <!--添加课程信息-->
    <insert id="addCourse" parameterType="course">
        insert into course (courseId,courseName,courseTime,lessonType,credit)
         values (#{courseId},#{courseName},#{courseTime},#{lessonType},#{credit})
    </insert>

    <!--根据老师名查找老师id-->
    <select id="queryByTeacherName" resultType="teacher">
        select * from teacher where teacherName=#{teacherName}
    </select>
    <insert id="addTeacherCourse" parameterType="teacherCourse">
        insert  into teacher_course (courseId,teacherId,place,lessonTime,isOpen)
         values (#{courseId},#{teacherId},#{place},#{lessonTime},1)
    </insert>

    <select id="queryCourse" resultType="course">
        select * from course order by courseId
    </select>
    <select id="queryCourseCount" parameterType="map" resultType="int">
        select count(*) from course order by courseId
    </select>

    <select id="getMaxCid" resultType="string">
        select courseId from course where id=(select MAX(id) from course)
    </select>

    <select id="queryNoTeachByCid" resultType="teacher">
        select teacherId,teacherName from teacher where teacherId not in
            (select t.teacherId from teacher_course tc join teacher t on
             t.teacherId=tc.teacherId where tc.courseId=#{courseId})
    </select>

</mapper>